package meeting1.ex5

def list1 = []
list1 << 1
list1 << 2
assert list1 == [1,2]


list1 << 3 << 4 << 5
assert list1 == [1,2,3,4,5]

////////////////////////////////////////////////

List<Integer> list2 = [1,2,3]
list2 += [4,5,6]
assert list2 == [1,2,3,4,5,6]

////////////////////////////////////////////////

assert ["a", "b", "c"].join("::") == "a::b::c"

////////////////////////////////////////////////


assert [4,5,6].sum() == 15
assert 5 + 5 + 7     == ["Hello", "World", "Example"].sum {it.size()}


////////////////////////////////////////////////


assert [5,4,6].sort() == [4,5,6]


////////////////////////////////////////////////


assert [1,2,3,6].find {it % 3 == 0}    == 3
assert [5,6,2].findAll {it % 2 == 0} == [6,2]


////////////////////////////////////////////////


assert [1,2,3,4,5,6,7,8,9,10].collate(3) == [[1,2,3], [4,5,6], [7,8,9], [10]]

////////////////////////////////////////////////


assert ! [1,2,3].any {it < 0}

assert [1,2,3].every {it > 0}


////////////////////////////////////////////////


assert [1,2,3].collect { it ** 2} == [1,4,9]


////////////////////////////////////////////////


assert [1,2,3,4,5][2]    == 3
assert [1,2,3,4,5][-1]   == 5
assert [1,2,3,4,5][2..4] == [3,4,5]


///////////////////////////////////////////////


assert 2  == [1,2,3,4,5].count { it %2 == 0}


///////////////////////////////////////////////


assert ["a", "b", "c"][-1] == "c"


///////////////////////////////////////////////

assert  ["PL1", "Java", "Pascal", "Groovy", "Perl"].grep {it[0] != 'P'} == ['Java', 'Groovy']

assert 10 == ["PL1", "Java", "Pascal", "Groovy", "Perl"].grep {it[0] != 'P'}.sum {it.size()}